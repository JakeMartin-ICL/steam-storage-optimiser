# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  create-release:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
  
  build-releases:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - run: pip install -r requirements.txt pyinstaller
    - run: pyinstaller steamStorageOptimiser.py
#     # Optionally verify that it works (provided that it does not need user interaction)
#     - ./dist/your-code/your-code
#     - uses: actions/upload-artifact@v2
#       with:
#         path: dist/*
    - uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "dist/*"
        tags: true
        draft: true
        update_latest_release: true
    #     - uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.PAT }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_name: steamStorageOptimiser.exe
#         asset_path: src/dist/windows/steamStorageOptimiser.exe
#         asset_content_type: application/octet-stream
#     - uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.PAT }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_name: steamStorageOptimiser-linux
#         asset_path: src/dist/linux/steamStorageOptimiser
#         asset_content_type: application/octet-stream

